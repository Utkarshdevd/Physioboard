Physioboard
============
Physioboard is an iOS universal app (meaning that it works on all iPhone/iPad/iPod touch 
with iOS 4.3.3 or above). Physioboard demonstrates the possibility of using an iOS 
device to view "real-time" physiological data (i.e., skin conductance, heart rate...etc).
I put together a solution using the Python Tornado Web Server (http://www.tornadoweb.org/) with
its WebSocket to keep the "real-time-ness" of data. On the iOS client side, I use 
PhoneGap (http://www.phonegap.com/) + some WebSocket hacks to display real-time data. 
However, this project shows the basic functionality (well, at least, for the real-time data).
It is still at the prototype stage. I hope this solution can shed some lights on streaming 
real-time physiological data to iPhone/iPad in order to inspire more usages of
real-time physiological data.

[![](https://github.com/jackylee0424/Physioboard/raw/master/physioboard-screenshot.jpg)](https://github.com/jackylee0424/Physioboard/raw/master/physioboard-screenshot.jpg)

How it works
============
[![](https://github.com/jackylee0424/Physioboard/raw/master/physioboard-diagram.jpg)](https://github.com/jackylee0424/Physioboard/raw/master/physioboard-diagram.jpg)

Physioboard consists of three major parts:

* Collector: 
This is data collection client. You may start from doing $python simple.py (before you do it, make sure your server is up and running). Collector may be extended with other data capturing devices such as sensors. I've try uploading the data streams from iCalm and Affectiva Q sensor (python scripts are not available at this point). However, you should be able to incorperate other kinds of sensors. 

* Server:
You need a server to receive and host data requests. I use Tornado Web Server (because I love Python and it also supports Websocket protocol). There are many thing you can do on the server end. For example, you can do data processing on server end. 

* Spectator:
This is the exciting part, the Spectator. All iOS devices can be Spectators after they install this app. I use PhoneGap + some WebSocket tricks to receive the data stream. It is relatively fast in real time. Try it to feel the power of real-time data.

-- 
Jackie Lee
jackylee@media.mit.edu
